/*
Navicat MySQL Data Transfer

Source Server         : wamp
Source Server Version : 50714
Source Host           : localhost:3306
Source Database       : lslblog

Target Server Type    : MYSQL
Target Server Version : 50714
File Encoding         : 65001

Date: 2017-04-20 22:58:07
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for lsl_article
-- ----------------------------
DROP TABLE IF EXISTS `lsl_article`;
CREATE TABLE `lsl_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `auther` varchar(11) DEFAULT NULL,
  `title` varchar(50) DEFAULT NULL,
  `content` text,
  `status` int(11) DEFAULT NULL COMMENT '0：未审核；1:正在审核；2：审核通过',
  `is_public` int(11) DEFAULT NULL COMMENT '1：公开;0:不公开',
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL COMMENT '修改时间',
  `cid` int(11) DEFAULT NULL,
  `smeta` text COMMENT 'æ‹“å±•å­—æ®µ',
  `click` int(11) DEFAULT NULL,
  `like` int(11) DEFAULT NULL,
  `is_top` int(11) DEFAULT NULL COMMENT '1:ç½®é¡¶ 0:éžç½®é¡¶',
  `summary` text COMMENT '简介',
  `is_comment` int(11) DEFAULT NULL COMMENT '1：允许评论；2：不允许评论',
  `thumb` varchar(255) DEFAULT NULL COMMENT '封面',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of lsl_article
-- ----------------------------
INSERT INTO `lsl_article` VALUES ('6', '1', '艺术画展分享', '<h1 class=\"entry-title\" style=\"font-size: 16px; margin: 0px 0px 15px; color: rgb(69, 69, 76); line-height: 24px; font-family: &quot;Open Sans&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">The Martians had been repulsed</h1><p style=\"margin-top: 0px; margin-bottom: 22px;\">They were described as “vast spiderlike machines, nearly a hundred feet high, capable of the speed of an express train, and able to shoot out a beam of intense heat.” Masked batteries, chiefly of field guns, had been planted in the country about Horsell Common, and especially between the Woking district and London. Five of the machines had been seen moving towards the Thames, and one, by a happy chance, had been destroyed. In the other cases the shells had missed, and the batteries had been at once annihilated by the Heat-Rays. Heavy losses of soldiers were mentioned, but the tone of the dispatch was optimistic.</p><p style=\"margin-top: 0px; margin-bottom: 22px;\">The Martians had been repulsed; they were not invulnerable. They had retreated to their triangle of cylinders again, in the circle about Woking. Signallers with heliographs were pushing forward upon them from all sides. Guns were in rapid transit from Windsor, Portsmouth, Aldershot, Woolwich–even from the north; among others, long wire-guns of ninety-five tons from Woolwich. Altogether one hundred and sixteen were in position or being hastily placed, chiefly covering London. Never before in England had there been such a vast or rapid concentration of military material.</p><h2 style=\"font-size: 18px; margin: 0px 0px 20px; color: rgb(58, 58, 64); line-height: 26px;\">Heading One</h2><p style=\"margin-top: 0px; margin-bottom: 22px;\">Any further cylinders that fell, it was hoped, could be destroyed at once by high explosives, which were being rapidly manufactured and distributed. No doubt, ran the report, the situation was of the strangest and gravest description, but the public was exhorted to avoid and discourage panic. No doubt the Martians were strange and terrible in the extreme, but at the outside there could not be more than twenty of them against our millions.</p><p style=\"margin-top: 0px; margin-bottom: 22px;\">The authorities had reason to suppose, from the size of the cylinders, that at the outside there could not be more than five in each cylinder–fifteen altogether. And one at least was disposed of–perhaps more. The public would be fairly warned of the approach of danger, and elaborate measures were being taken for the protection of the people in the threatened southwestern suburbs. And so, with reiterated assurances of the safety of London and the ability of the authorities to cope with the difficulty, this quasi-proclamation closed.</p><h3 style=\"font-size: 16px; margin: 0px 0px 20px; color: rgb(58, 58, 64); line-height: 26px;\">Heading Two</h3><p style=\"margin-top: 0px; margin-bottom: 22px;\">This was printed in enormous type on paper so fresh that it was still wet, and there had been no time to add a word of comment. It was curious, my brother said, to see how ruthlessly the usual contents of the paper had been hacked and taken out to give this place.</p><p><br/></p>', '2', '1', '2017-04-17 21:42:46', '2017-04-17 21:42:46', '3', null, null, null, '0', 'They were described as “vast spiderlike machines, nearly a hundred feet high, capable of the speed of an express train, and able to shoot out a beam of intense heat.” Masked batteries, chiefly of field guns, had been planted in the country about Horsell Common, and especially between the Woking district and London. Five of the machines had been seen moving towards the Thames, and one, by a happy chance, had been destroyed. In the other cases the', '1', 'uploads/20170417883.jpg');
INSERT INTO `lsl_article` VALUES ('5', '1', '1', '<p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">学习laravel快小一年了，到现在才去研究laravel 的核心 &#39;容器 IOC&#39; 这些概念. 写项目的时候有大概看看关于IOC 文章， 但是没有深入理解，只是有个概念,赶着写代码， 虽然代码也写的很菜 · - ·</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">这几天花了点时间研究了一下laravel 的核心 ‘服务容器’ 然后理解了一下关于IOC 的概念. 不敢说百分百掌握了，但是比之前是有一定加深. 所以决定把自己理解的分享一下, 把自己的第一次博文献给laravel. 理解不到位的还请各位大牛多多指正.</p><h2 style=\"margin: 0px 0px 0.5em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; white-space: normal; background-color: rgb(254, 254, 254);\">1.依赖</h2><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">IOC( inversion of controller )叫做控制反转模式，也可以称为(dependency injection ) 依赖注入模式。要理解依赖注入的概念我们先理解下什么依赖</p><pre class=\"brush:html;toolbar:false\">//支付宝支付class&nbsp;Alipay&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;alipay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//微信支付class&nbsp;Wechatpay&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;wechatpay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//银联支付class&nbsp;Unionpay{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;unionpay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//支付账单class&nbsp;PayBill&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$payMethod；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(&nbsp;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;payMethod=&nbsp;new&nbsp;Alipay&nbsp;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;&nbsp;payMyBill()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;payMethod-&gt;pay();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n\r\n$pb&nbsp;=&nbsp;new&nbsp;PayBill&nbsp;();\r\n$pb-&gt;payMyBill();</pre><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">通过上面的代码我们知道,当我们创建一个class PayBill 的实例的时候, PayBill 的构造函数里面有{ $this-&gt;payMethod= new Alipay (); }, 也就是实例化了一个class Alipay . 这个时候依赖就产生了, 这里可以理解为当我想用支付宝支付的时候, 那我首先要获取到一个支付宝的实例,或者理解为获取支付宝的功能支持. 当用我们完 new 关键字的时候, 依赖其实已经解决了，因为我们获取了Alipay 的实例.</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">其实在我知道ioc概念之前，我的代码中大部分都是这种模式 ~ _ ~ . 这种有什么问题呢， 简单来说， 比如当我想用的不是支付宝而是微信的时候怎么办， 你能做的就是修改Payment 的构造函数的代码,实例化一个微信支付Wechatpay.</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">如果我们的程序不是很大的时候可能还感觉不出什么，但是当你的代码非常复杂，庞大的时候，如果我们的需求经常改变，那么修改代码就变的非常麻烦了。所以ioc 的思想就是不要在 class Payment 里面用new 的方式去实例化解决依赖， 而且转为由外部来负责，简单一点就是内部没有new 的这个步骤，通过依赖注入的方式同样的能获取到支付的实例.</p><h2 style=\"margin: 0px 0px 0.5em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; white-space: normal; background-color: rgb(254, 254, 254);\">2.依赖注入</h2><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">依赖我们知道了是什么意思，那依赖注入又是什么意思呢，我们把上面的代码拓展一下</p><pre class=\"brush:html;toolbar:false\">//支付类接口interface&nbsp;Pay{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay();\r\n}//支付宝支付class&nbsp;Alipay&nbsp;implements&nbsp;Pay&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;alipay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//微信支付class&nbsp;Wechatpay&nbsp;implements&nbsp;Pay&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;wechatpay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//银联支付class&nbsp;Unionpay&nbsp;implements&nbsp;Pay&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(){}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;pay()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;pay&nbsp;bill&nbsp;by&nbsp;unionpay&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//付款class&nbsp;PayBill&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$payMethod;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(&nbsp;Pay&nbsp;$payMethod)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;payMethod=&nbsp;$payMethod;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;&nbsp;payMyBill()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;payMethod-&gt;pay();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//生成依赖$payMethod&nbsp;=&nbsp;&nbsp;new&nbsp;Alipay();//注入依赖$pb&nbsp;=&nbsp;new&nbsp;PayBill(&nbsp;$payMethod&nbsp;);\r\n$pb-&gt;payMyBill();</pre><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">上面的代码中，跟之前的比较的话，我们加入一个Pay 接口， 然后所有的支付方式都继承了这个接口并且实现了pay 这个功能. 可能大家会问为什么要用接口，这个我们稍后会讲到.</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">当我们实例化PayBill的之前， 我们首先是实例化了一个Alipay，这个步骤就是生成了依赖了，然后我们需要把这个依赖注入到PayBill 的实例当中，通过代码我们可以看到 { $pb = new PayBill( payMethod ); }, 我们是通过了构造函数把这个依赖注入了PayBill 里面. 这样一来 $pb 这个PayBill 的实例就有了支付宝支付的能力了.</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">把class Alipay 的实例通过constructor注入的方式去实例化一个 class PayBill. 在这里我们的注入是手动注入, 不是自动的. 而Laravel 框架实现则是自动注入.</p><h2 style=\"margin: 0px 0px 0.5em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; white-space: normal; background-color: rgb(254, 254, 254);\">3.反射</h2><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">在介绍IOC 的容器之前我们先来理解下反射的概念(reflection)，因为IOC 容器也是要通过反射来实现的.从网上抄了一段来解释反射是什么意思</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">&quot;反射它指在PHP运行状态中，扩展分析PHP程序，导出或提取出关于类、方法、属性、参数等的详细信息，包括注释。这种动态获取的信息以及动态调用对象的方法的功能称为反射API。反射是操纵面向对象范型中元模型的API，其功能十分强大，可帮助我们构建复杂，可扩展的应用。其用途如：自动加载插件，自动生成文档，甚至可用来扩充PHP语言&quot;</p><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">举个简单的例子</p><pre class=\"brush:html;toolbar:false\">class&nbsp;B{\r\n\r\n}class&nbsp;A&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(B&nbsp;$args)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;dosomething()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;Hello&nbsp;world&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}//建立class&nbsp;A&nbsp;的反射$reflection&nbsp;=&nbsp;new&nbsp;ReflectionClass(&#39;A&#39;);\r\n\r\n$b&nbsp;=&nbsp;new&nbsp;B();//获取class&nbsp;A&nbsp;的实例$instance&nbsp;=&nbsp;$reflection&nbsp;-&gt;newInstanceArgs(&nbsp;[&nbsp;$b&nbsp;]);\r\n\r\n$instance-&gt;dosomething();&nbsp;//输出&nbsp;‘Hellow&nbsp;World’$constructor&nbsp;=&nbsp;$reflection-&gt;getConstructor();//获取class&nbsp;A&nbsp;的构造函数$dependencies&nbsp;=&nbsp;$constructor-&gt;getParameters();//获取class&nbsp;A&nbsp;的依赖类dump($constructor);\r\n\r\ndump($dependencies);</pre><p><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; text-indent: 16px; background-color: rgb(254, 254, 254);\">dump 的得到的$constructor 和 $dependencies 結果如下</span></p><pre class=\"brush:html;toolbar:false\">//constructorReflectionMethod&nbsp;{#351&nbsp;▼\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+name:&nbsp;&quot;__construct&quot;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+class:&nbsp;&quot;A&quot;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parameters:&nbsp;array:1&nbsp;[▶]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra:&nbsp;array:3&nbsp;[▶]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modifiers:&nbsp;&quot;public&quot;}//$dependenciesarray:1&nbsp;[▼&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;ReflectionParameter&nbsp;{#352&nbsp;▼\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+name:&nbsp;&quot;args&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeHint:&nbsp;&quot;B&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n]</pre><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">通过上面的代码我们可以获取到 class A 的构造函数，还有构造函数依赖的类，这个地方我们依赖一个名字为 &#39;args&#39; 的量，而且通过TypeHint可以知道他是类型为 Class B; 反射机制可以让我去解析一个类，能过获取一个类里面的属性，方法 ，构造函数， 构造函数需要的参数。 有个了这个才能实现Laravel 的IOC 容器.</p><h2 style=\"margin: 0px 0px 0.5em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; white-space: normal; background-color: rgb(254, 254, 254);\">4.IOC容器</h2><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">接下来介绍一下Laravel 的IOC服务容器概念. 在laravel框架中， 服务容器是整个laravel的核心，它提供了整个系统功能及服务的配置, 调用. 容器按照字面上的理解就是装东西的东西，比如冰箱， 当我们需要冰箱里面的东西的时候直接从里面拿就行了. 服务容器也可以这样理解， 当程序开始运行的时候，我们把我们需要的一些服务放到或者注册到(bind)到容器里面，当我需要的时候直接取出来(make)就行了. 上面提到的 bind 和 make 就是注册 和 取出的 两个动作.</p><h2 style=\"margin: 0px 0px 0.5em; font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; white-space: normal; background-color: rgb(254, 254, 254);\">5. IOC 容器代码</h2><p style=\"margin-top: 0px; margin-bottom: 0.75em; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial, STXihei, &quot;Microsoft YaHei&quot;, 微软雅黑, sans-serif; white-space: normal; background-color: rgb(254, 254, 254);\">好了，说了这么多，下面要上一段容器的代码了. 下面这段代码不是laravel 的源码， 而是来自一本书《laravel 框架关键技术解析》. 这段代码很好的还原了laravel 的服务容器的核心思想. 代码有点长， 小伙伴们要耐心看. 当然小伙伴完全可以试着运行一下这段代码，然后调试一下，这样会更有助于理解.</p><p><br/></p>', '2', '0', '2017-04-14 23:04:58', '2017-04-14 23:22:40', '1', null, null, null, '0', '1. laravel容器基本认识\r\n2. 如何在代码中获取到容器实例\r\n3. 直观的认识laravel容器\r\n4. 如何理解服务绑定与解析\r\n5. 服务提供者的作用与使用\r\n6. 服务绑定名称的别名\r\n7. 依赖注入的机制\r\n8. 其它', '1', 'uploads/20170414148.jpg');
INSERT INTO `lsl_article` VALUES ('7', '1', '成为高级 PHP 程序员的第一步——调试（xdebug 原理篇）', '<h3 id=\"先讲一下-xdebug-工作原理总结为下面几个步骤\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.43; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.2em; position: relative; white-space: normal; background-color: rgb(255, 255, 255);\">先讲一下 xdebug 工作原理，总结为下面几个步骤：<a href=\"https://laravel-china.org/articles/4090/the-first-step-to-becoming-a-senior-php-programmer-debugging-xdebug-principle#先讲一下-xdebug-工作原理总结为下面几个步骤\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h3><ol style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 10px; line-height: 30px;\">IDE（比如 PhpStorm ，下文所述的客户端）中已经集成了一个遵循 BGDp 的 Xdebug 插件。当要 debug 的时候，点击一些 IDE 的某个按钮，启动这个插件。该插件会启动一个 9000 的端口监听远程服务器发过来的 debug 信息。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; margin: 20px 0px !important; font-size: inherit; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252);\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">phpstorm 中，开启 / 关闭的位置为：工具栏 &gt; Run &gt; Start / Stop Listening for PHP Xdebug Connetions</p></blockquote></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 10px; line-height: 30px;\">浏览器向 Httpd 服务器发送一个带有 XDEBUG_SESSION_START 参数的请求，服务器收到这个请求之后交给后端的PHP（已开启 xdebug 模块）进行处理。</p></li><li><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 10px; line-height: 30px;\">Php 看到这个请求是带了 XDEBUG_SESSION_START 参数，就告诉 Xdebug，“嘿，我要debug喔，你准备一下”。这时，Xdebug 会向来源 ip 客户端的9000端口（默认是 9000 端口）发送一个debug请求，然后客户端的 9000 端口响应这个请求，那么 debug 就开始了。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; margin: 20px 0px !important; font-size: inherit; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252);\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">这里通知客户端其实有两种方式，根据 xdebug 的配置&nbsp;<code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">xdebug.remote_connect_back = 0 | 1</code>&nbsp;使用不同的通知方式，下文会详细介绍</p></blockquote></li><li><p>Php 知道 Xdebug 已经准备好了，那么就开始开始一行一行的执行代码，但是每执行一行都会让 Xdebug 过滤一下，Xdebug 在过滤每一行代码的时候，都会暂停代码的执行，然后向客户端的 9000 端口发送该行代码的执行情况，等待客户端的决策（是一句代码还是下一个断点待）。。</p></li><li><p>相应，客户端（IDE）收到 Xdebug 发送过来的执行情况，就可以把这些信息展示给开发者看了，包括一些变量的值等。同时向 Xdebug 发送下一步应该什么。</p></li></ol><h3 id=\"以上就是整个工作流程下面介绍一下两种通知客户端的方式\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.43; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.2em; position: relative; white-space: normal; background-color: rgb(255, 255, 255);\">以上就是整个工作流程，下面介绍一下两种通知客户端的方式：<a href=\"https://laravel-china.org/articles/4090/the-first-step-to-becoming-a-senior-php-programmer-debugging-xdebug-principle#以上就是整个工作流程下面介绍一下两种通知客户端的方式\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">Xdebug 的官方文档给了两张很清楚的交互图</p><h4 id=\"第一种静态绑定客户端-host\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.4; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.1em; position: relative; white-space: normal; background-color: rgb(255, 255, 255);\">第一种，静态绑定客户端 host<a href=\"https://laravel-china.org/articles/4090/the-first-step-to-becoming-a-senior-php-programmer-debugging-xdebug-principle#第一种静态绑定客户端-host\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h4><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\"><code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">xdebug.remote_connect_back = 0</code>&nbsp;，也是 xdebug 的默认方式，这种情况下，xdebug 在收到调试通知时会读取配置&nbsp;<code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">xdebug.remote_host</code>&nbsp;和&nbsp;<code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">xdebug.remote_port</code>&nbsp;，默认是 localhost:9000，然后向这个端口发送通知<br style=\"box-sizing: border-box;\"/><img src=\"/ueditor/php/upload/image/20170418/1492527084114877.gif\" alt=\"file\" data-type=\"image\" style=\"box-sizing: border-box; border: 1px solid rgb(221, 221, 221); vertical-align: middle; max-width: 100%; box-shadow: rgb(204, 204, 204) 0px 0px 30px; margin-bottom: 30px; margin-top: 10px;\"/></p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">可以看到，<code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">remote_host</code>&nbsp;的 IP 是固定的，这种方式只适合单一客户端开发调试</p></blockquote><h4 id=\"第二种不绑定-IP根据请求来源通知\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.4; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.1em; position: relative; white-space: normal; background-color: rgb(255, 255, 255);\">第二种，不绑定 IP，根据请求来源通知<a href=\"https://laravel-china.org/articles/4090/the-first-step-to-becoming-a-senior-php-programmer-debugging-xdebug-principle#第二种不绑定-IP根据请求来源通知\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h4><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\"><code style=\"box-sizing: border-box; font-family: monaco, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 0.9em; padding: 1px 2px; color: rgb(133, 128, 128); background: rgb(249, 250, 250); border-radius: 4px; margin: 5px; border: 1px solid rgb(228, 228, 228); max-width: 740px; overflow-x: auto;\">xdebug.remote_connect_back = 1</code>，这种方式和上面基本相同，唯一不同的是，php 在 接受 http 请求后，xdebug 会将请求来源的 IP 绑定，并通知</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"/ueditor/php/upload/image/20170418/1492527085484968.gif\" alt=\"file\" data-type=\"image\" style=\"box-sizing: border-box; border: 1px solid rgb(221, 221, 221); vertical-align: middle; max-width: 100%; box-shadow: rgb(204, 204, 204) 0px 0px 30px; margin-bottom: 30px; margin-top: 10px;\"/></p><p><br/></p>', '2', '1', '2017-04-18 22:51:29', '2017-04-18 22:54:26', '8', null, null, null, '0', 'xdebug 对于许多 phper 应该一点也不陌生。说来惭愧，对于常年使用 var_dump，echo，现在又多了一个dd :sweat_smile: ，来调试程序的猿来说，这种方式实在有点过时。今天花了一些时间好好了解了一下，现在就整理一下这款，能提升你调试效率以及逼格满满的调试利器———— xdebug', '1', 'uploads/20170418795.jpg');
INSERT INTO `lsl_article` VALUES ('8', '1', '理解网站开发：不懂技术如何做决策？', '<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">通常来讲，程序员不仅仅需要拥有技术方面的知识储备，往往需要对公司的业务产品流程有很多的了解和思考，反向思考一下，那是不是你的 Boss、产品经理或者客户是不是也应该了解一下技术如何执行的呢，双方都了解彼此的一些概念，说不定更有助于双方的合作呢。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">如果你是开发者，也可以基于这篇文章，给你们业务团队做一个 Presentation 。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">为什么通过 Laravel 来讲这件事情，很简单，我是一名 Laravel 开发者，欢迎关注&nbsp;<a href=\"https://laravel-china.org/\" style=\"box-sizing: border-box; background: transparent; color: rgb(5, 161, 162); text-decoration-line: none;\">Laravel China 社区</a>。</p><h2 id=\"Why-should-I-care-\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">Why should I care ?<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#Why-should-I-care-\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">作为 Boss 或者客户，你可能觉得自己不应该关系技术方面的事情，这毕竟是你花了很多钱雇佣来的程序员应该关心的事情，但是：</p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">Some technical knowledge is really powerful.</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">理解什么是 Laravel，有助于你更快速、高效、低风险的管理一个项目，因为你的决策会变的更加高效，基于知识和逻辑推理，而不是有人告诉你该怎么做之类的。也会让你更加明智的为项目选择开发人员，你也可以读一读我之前整理的一篇文章：<a href=\"http://www.jianshu.com/p/dc8ec3d83753\" style=\"box-sizing: border-box; background: transparent; color: rgb(5, 161, 162); text-decoration-line: none;\">理解程序员并不是一项简单的任务, 即使你当过程序员</a>。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">当然不仅仅是 Laravel，我还会分享给你很多有趣的事情。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">技术开发领域通常会有很多术语和复杂的概念，不过你并不用担心，但是我会尽量减少技术术语，避免陷入<a href=\"https://zhuanlan.zhihu.com/p/20396676\" style=\"box-sizing: border-box; background: transparent; color: rgb(5, 161, 162); text-decoration-line: none;\">知识的诅咒陷阱</a>，用客户的语言向你讲述一个关于技术的故事。毕竟这也是工程师必须具备的技能，用客户的语言讲述产品或者功能，以保证客户和开发团队都在相同的上下文环境。</p></blockquote><h2 id=\"前端后端和全栈有什么区别\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">前端、后端和全栈有什么区别？<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#前端后端和全栈有什么区别\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">每个网站项目都包含两个部分：</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>不可见的「后端」：定义项目/业务如何运行的逻辑代码。</p></li><li><p>可见的「前端」：定义你的产品看起来如何的代码。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">这是基本的区别，让我们先不要搞得太复杂。先来简单了解一下基本的一些前后端用的编程语言和技术：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">后端语言常见的有 PHP, Ruby, Python, Java, Node 等等，通常你需要为项目选择一门语言。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">前端语言的术语稍微有点复杂：</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p><strong style=\"box-sizing: border-box;\">HTML</strong>&nbsp;: 定义你的网站布局的标记语言（甚至算不上一门编程语言）。</p></li><li><p><strong style=\"box-sizing: border-box;\">CSS</strong>&nbsp;是用来为网站定义颜色、字体、边距等等设计元素，主要用于为你的项目添加好看的主题或样式。</p></li><li><p><strong style=\"box-sizing: border-box;\">JavaScript</strong>&nbsp;这是前端真正使用到的编程语言，通常你看到网站上有趣的动效就是使用它来制作，现在&nbsp;<strong style=\"box-sizing: border-box;\">JavaScript</strong>&nbsp;不仅被用来做动效，也能用来处理更复杂的一些事物。</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">OK，这是一些基本的编程语言，他们通常都有自己不同的编程框架或者延伸的编程语言，稍后我们还会讨论，现在不用太深究，这些已经足够让你对前后端的区别有个基本了解。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">需要提及的是，尽管前端和后端都是在写代码，但是它们需要不同的思维方式和技巧，后端更关注逻辑，前端更关注视觉上的东西，通常来讲需要两个不同的工程师来搞定不同的开发工作。</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">有另外一个选择是，全栈工程师，他们对前端和后端都有很熟练的经验，或者至少他们声称自己可以胜任。从经验上来看，这些工程师还是会偏重于某个方面，比如对后端开发十分擅长，对前端开发也可以轻松胜任，或者相反。使用全栈工程师有利有弊，需要根据项目具体的预算和对项目的质量要求做衡量。</p><h2 id=\"什么是框架Framework\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">什么是框架（Framework）？<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#什么是框架Framework\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">你可能理解编程语言的概念，就是约束你如何去写代码的规则集，就像我们的母语语法一样。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">在编程语言演化的过程当中，开发者看到一些重复的代码一次又一次的出现，这对开发人员是一种耻辱，所以他们尝试用很多种方式将重复的代码进行打包（Package），慢慢地，一些类、代码片段和常用的代码包被合并在一起，形成了一个<strong style=\"box-sizing: border-box;\">框架（Framework）</strong>。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">简单来说，一个框架就是一些预先写好的代码集合，去避免重新创造轮子以及为每一个新项目写一次同样的代码。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">比如，登录/登出是每一个网站都需要的基本功能，代码的文件夹组织结构，网址的解析和调用（程序员成为「路由」）等等，已经被完成过很多次，所以为什么我们不选择从一个框架为蓝图开发新的项目呢？</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">所以我们开始谈到 Laravel，现在你比较容易理解，Laravel 是一个基于 PHP 编程语言的框架。其他比较流行的 PHP 框架：Symfony, Zend Framework, CodeIgniter, Yii, Cake PHP, Phalcon。这些框架之间的差异还是蛮大的，而且它们也是市场上相互的竞争者，为框架流行程度和社区人数而战。我们很高兴的说 Laravel 是目前的领导者，最接近的竞争对手是 Symfony。</p><h2 id=\"为什么选择-Laravel-而不是-WordPress\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">为什么选择 Laravel 而不是 WordPress？<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#为什么选择-Laravel-而不是-WordPress\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">这是两个巨大差异但是看起来很像的两个事物：<strong style=\"box-sizing: border-box;\">编程框架</strong>&nbsp;和&nbsp;<strong style=\"box-sizing: border-box;\">内容管理系统（CMS）</strong>，先来聊聊它们有什么差异：</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">CMS（Content Management System） 是一个系统用来管理系统，内容管理人员通常来并不是开发人员，他们比较关心图片、文字等内容的生成，CMS 的目的是为了提供给他们一个更好的内容产生工具。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">编程框架需要开发者花时间在上面写代码，为业务定制功能。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">换句话来讲，你可以部署一个 CMS 到你自己的服务器，即使你没有任何技术能力。内容管理系统通常会有可视化的安装、拖拽的 UI 接口，以及简单易懂的站点设置。但是如果使用框架，你就需要基于框架为需要实现的功能写代码。</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>流行的一些 CMSs：WordPress, Drupal, Joomla, OctoberCMS</p></li><li><p>流行的一些 Frameworks：Laravel, Symfony, Django</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">所以，问题来了，如果你想开始一个网站项目，什么时候需要选择 CMS，什么时候应该选择框架从头开发呢？这有点复杂，但比较简单的解释：如果你的项目核心是内容（比如博客、新闻门户、公司资讯等等），可以选择 CMS。如果你的项目设计到很多用户产生的数据（个人信息、消息通知、支付数据），选择框架开发或许是更好的选择。</p><h2 id=\"为什么选择-Laravel而不是其他框架\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">为什么选择 Laravel，而不是其他框架？<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#为什么选择-Laravel而不是其他框架\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">我们来聊一聊框架之间的「圣战」，不开玩笑，开发人员确实会为他们各自使用的框架而战。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">一般来说，实际上并没有任何差别。这取决于一个特定的开发者对于一个框架的熟悉程度。一个使用 Laravel 创建了 10 个项目的开发者开发速度和质量肯定比一个只使用了 Symfony 开发了 1~2 个项目经验的开发者好。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">在框架世界里面有个简单的分类，「Full Framework 」（上面提到的这些）和「Micro frameworks」，比如 Laravel 的精简版本 Lumen、Slim、Silex、Flight。除了这些 micro-frameworks，任何与时俱进的现代框架都可以很好的帮你完成开发。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">谈到与时俱进，这可能是这个问题需要重要考虑的因素。你可能计划开启一个项目并且计划在将来持续去更新维护它，你需要一个发展趋势良好和强大的社区支持的编程框架来支持他。目前 PHP 市场有两个强力的领导者 Laravel 和 Symfony，其他框架不流行的原因各有不同，CodeIgniter 已被它的创造者遗弃，有些框架过于复杂（Zend Framework），而有些社区力量过于弱小（Yii, Cake PHP）。</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">现在还有一个问题，如何在两个市场领导者之间做出选择：Laravel or Symfony？他们两者之间主要的区别在于严格的代码结构。Symfony 在代码如何编写方面要严格的多，因此在企业应用程序中更受欢迎，而 Laravel 把更多的「自由」给开发人员，因此在比较小型的 Web Apps 和创业公司更受欢迎，具有较低的开发市场入门门槛。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">因此，从成本上考虑，Symfony 的开发者会比较昂贵，相对于 Laravel，在市场上找到一个专业的 Symfony 工程师比较困难。</p><blockquote style=\"box-sizing: border-box; padding: 1rem; font-size: 15px; border-left: none; line-height: 30px; color: rgb(135, 150, 168); background-color: rgb(245, 248, 252); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; margin: 20px 0px !important;\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 30px;\">但是无论是为项目选择哪个框架，在框架领域找到合适的开发者更为重要，而不是纠结于框架本身。</p></blockquote><h2 id=\"有哪些典型的基于-Laravel-的网站\" style=\"box-sizing: border-box; font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 500; line-height: 1.225; color: rgb(82, 82, 82); margin-top: 1em; margin-bottom: 16px; font-size: 1.3em; position: relative; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: normal; background-color: rgb(255, 255, 255);\">有哪些典型的基于 Laravel 的网站？<a href=\"https://laravel-china.org/articles/4462/understanding-website-development-do-not-know-how-to-make-decisions#有哪些典型的基于-Laravel-的网站\" class=\"anchorific\" style=\"box-sizing: border-box; background: transparent; color: rgb(226, 226, 226); text-decoration-line: none; padding-left: 4px; display: inline-block;\">#</a></h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">有哪些项目更适合使用 Laravel 开发，答案基于个人的经验、服务的客户以及招聘信息。</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>Two-sided user-based marketplaces</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">有很多相似的项目通常是一个用户群体向另外一个用户群体订购一些东西，可能是服务、或者产品、或者只是在线交流。比如国内的众包平台，对接专业人士（程序员、产品经理、设计师）和需求方。</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>数据管理和后台管理类型的项目</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">如果你的公司需要管理一些数据，而现成的一些 CRM or ERP 系统并不能满足你的需求（或者对你来，使用它们太过于复杂）。可以使用 Laravel 构建自己的管理系统，比如进行贷款管理、活动管理、文件提交流程处理、或者订单流程管理等。</p><ul style=\"box-sizing: border-box; margin-bottom: 10px; padding: 10px 20px 10px 30px; line-height: 30px; color: rgb(125, 134, 136); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>技术整合和 API 类型的项目</p></li></ul><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">现在的技术环境，有大量的第三方 API 可以使用，我们可以用它们来完成很多和外部交互的功能。比如我们可以使用微博的 API 自动发布微博，使用微信公众号的 API 进行公众号管理。我们也可以对外部的 API 进行打包、集成来创建自己的 API 服务，提供给自己的移动应用程序或其他网站使用。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; line-height: 30px; color: rgb(82, 82, 82); font-family: NotoSansHans-Regular, AvenirNext-Regular, arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">还会有很多类型的项目在诞生，但是目前来看，市场上主要是这三个类型的项目。</p><p><br/></p>', '2', '1', '2017-04-18 22:57:58', '2017-04-18 22:57:58', '8', null, null, null, '0', 'Notadd 是基于Laravel 和 Vue 的开源PHP框架， 由于其本身的灵活性和先进的技术架构，使得你通过模块（主功能）、插件（功能增强）、模板（前端样式）像搭积木一样组合成你想要的，诸如：商城、CMS、微信、论坛... 快速完成开发。\r\nNotadd 像操作系统一样，你可以通过安装“软件”，成为适用于你的“电脑”。\r\n\r\n先进的技术方案，使得你无需担心后期功能拓展与迭代问题，大大降低了维护成本。对于一个超过三年生命周期的项目来说，Notadd 最适合不过。\r\n\r\n总之，Notadd 是新的技术方向标，能让每个web艺术家像构建工程一样构建程序。', '1', 'uploads/20170418866.jpg');

-- ----------------------------
-- Table structure for lsl_category
-- ----------------------------
DROP TABLE IF EXISTS `lsl_category`;
CREATE TABLE `lsl_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `click` int(11) DEFAULT '0',
  `pid` int(11) DEFAULT NULL,
  `order` int(11) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `thumb` varchar(255) DEFAULT NULL,
  `show` varchar(255) DEFAULT NULL,
  `summary` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of lsl_category
-- ----------------------------
INSERT INTO `lsl_category` VALUES ('1', '领域技能', '0', '0', '1', '网罗各路技能', 'uploads/20170418532.jpg', 'uploads/20170418151.jpg', '概念技能是指一种洞察既定环境复杂程度的能力和减少这种复杂性的能力。具体地说，概念技能包括理解事物的相互关联性从而找出关键影响因素的能力，确定和协调各方面关系的能力以及权衡不同方案优劣和内在风险的能力，等等。');
INSERT INTO `lsl_category` VALUES ('2', '时尚达人', '0', '0', '2', '“时尚”一词已是这个世界的潮流代言词', 'uploads/20170418818.jpg', 'uploads/20170418503.jpg', '“时尚”一词已是这个世界的潮流代言词，英文为fashion，几乎是经常挂在某些人的嘴边，频繁出现在报刊媒体上。很多人对时尚的理解都不同，有人认为时尚即是简单，与其奢华浪费，不如朴素节俭；有时时尚只是为了标新立异；给人焕然一新拥有时尚王风范的感觉，现实中很多与时尚不同步的人被指为老土、落伍；所谓时尚，是时与尚的结合体。所谓时，乃时间，时下，即在一个时间段内；尚，则有崇尚，高尚，高品位，领先。时尚其实在这个时代而言的，不仅仅是为了修饰，甚至已经演化成了一种追求真善美的意识。');
INSERT INTO `lsl_category` VALUES ('3', '心情随笔', '0', '0', '3', '记录点点滴滴', 'uploads/20170418538.jpg', 'uploads/20170418905.jpg', '我的心事呀哈哈哈哈哈哈哈。。没有没有傻逼');
INSERT INTO `lsl_category` VALUES ('4', '饕餮美食', '0', '0', '4', '美食同分享', 'uploads/20170418719.png', null, null);
INSERT INTO `lsl_category` VALUES ('5', '美食攻略', '0', '4', '0', '无', null, null, null);
INSERT INTO `lsl_category` VALUES ('6', '美妆专栏', '0', '2', '1', '无', null, null, null);
INSERT INTO `lsl_category` VALUES ('7', '穿搭指南', '0', '2', '0', '无', null, null, null);
INSERT INTO `lsl_category` VALUES ('8', 'php', '0', '1', '2', '无dd', 'uploads/20170418161.jpg', null, '现在的技术环境，有大量的第三方 API 可以使用，我们可以用它们来完成很多和外部交互的功能。比如我们可以使用微博的 API 自动发布微博，使用微信公众号的 API 进行公众号管理。我们也可以对外部的 API 进行打包、集成来创建自己的 API 服务，提供给自己的移动应用程序或其他网站使用。');
INSERT INTO `lsl_category` VALUES ('22', 'http', '0', '1', '1', '就是http呗', 'uploads/20170418116.jpg', null, null);
INSERT INTO `lsl_category` VALUES ('23', 'linux', '0', '1', '3', '服务器上', 'uploads/20170418483.jpg', null, null);
INSERT INTO `lsl_category` VALUES ('24', '数据库', '0', '1', '4', '不懂不懂', 'uploads/20170418402.jpg', null, null);

-- ----------------------------
-- Table structure for lsl_user
-- ----------------------------
DROP TABLE IF EXISTS `lsl_user`;
CREATE TABLE `lsl_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_login` varchar(255) DEFAULT NULL,
  `user_pass` varchar(255) DEFAULT NULL,
  `user_email` varchar(255) DEFAULT NULL,
  `user_nicename` varchar(255) DEFAULT NULL,
  `avatar` varchar(255) DEFAULT NULL,
  `sex` int(11) DEFAULT NULL COMMENT '0:ä¿å¯† 1:ç”· 2:å¥³',
  `birthday` date DEFAULT NULL,
  `signature` varchar(255) DEFAULT NULL COMMENT 'ä¸ªæ€§ç­¾å',
  `create_time` datetime DEFAULT NULL,
  `user_status` int(11) DEFAULT NULL COMMENT '0:ç¦ç”¨ 1:æ­£å¸¸ ',
  `coin` int(11) DEFAULT NULL,
  `score` int(11) DEFAULT NULL,
  `user_type` int(11) DEFAULT NULL COMMENT '1:admin 2:å®¡æ ¸å‘˜ 3:ç”¨æˆ·',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of lsl_user
-- ----------------------------
INSERT INTO `lsl_user` VALUES ('1', 'admin', 'eyJpdiI6Inc4Y0VjZHlSbXg3NGZyencxVXQ5Y1E9PSIsInZhbHVlIjoiOGRXWjJYUThRelBRQmtSQjNRbzhCUT09IiwibWFjIjoiNjE4YWU2ZTNlMDNjYTE1NmJlYThiMjhlMGI2ZDcwOTllOTQyNDEzMDVhZjIyYTgyMmQ2ZWY5MzM5MDI1NDllZCJ9', null, null, null, null, null, null, null, null, null, null, null);
INSERT INTO `lsl_user` VALUES ('2', 'lishanling', 'eyJpdiI6Inc4Y0VjZHlSbXg3NGZyencxVXQ5Y1E9PSIsInZhbHVlIjoiOGRXWjJYUThRelBRQmtSQjNRbzhCUT09IiwibWFjIjoiNjE4YWU2ZTNlMDNjYTE1NmJlYThiMjhlMGI2ZDcwOTllOTQyNDEzMDVhZjIyYTgyMmQ2ZWY5MzM5MDI1NDllZCJ9', '389475917@qq.com', '快乐的心灵', null, '1', '2017-04-19', null, null, null, null, null, '1');
